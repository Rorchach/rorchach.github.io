[{"title":"HashSet","url":"/solid-octo-succotash/2023/05/20/HashSet/","content":"HashSet 是 Java 中的一个集合类，它实现了 Set 接口。HashSet 是基于哈希表（hash table）实现的，它使用哈希算法来存储和检索元素。\nHashSet 的特点包括：\n无序性： HashSet 不保持元素的特定顺序，存储和迭代元素的顺序是不确定的。\n唯一性：HashSet 不允许存储重复的元素。当尝试将重复的元素添加到 HashSet 中时，该操作会被忽略。\n高效性:HashSet 提供了快速的插入、删除和查找操作。这是因为它使用哈希算法将元素存储在内部的哈希表中，并根据元素的哈希值进行快速的索引和访问。\n使用 HashSet 时，要确保添加到集合中的元素正确实现了 hashCode() 和 equals() 方法。这两个方法在确定元素的哈希值和判断元素是否相等时起着关键作用。如果元素的哈希值发生冲突（即不同元素具有相同的哈希值），HashSet 会使用链表或红黑树等数据结构来解决冲突。\nHashSet 是常用的集合类之一，适用于需要存储唯一元素且不需要保持顺序的场景。它提供了高效的元素查找和插入操作，通常用于需要频繁地判断元素是否存在的场景。\n"},{"title":"Hello World","url":"/solid-octo-succotash/2023/05/19/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"Markdown语法的简单笔记以及刷题复习java记录","url":"/solid-octo-succotash/2023/05/19/LeetCode%2001/","content":" 正文  # 换行，注意实际空一行，直接敲回车不能换行 代码块使用&#96;&#96;&#96;+编程语言 正文中的代码 hello world 直接用&#96;&#96;括住\n//给定整数 n ，返回 所有小于非负整数 n 的质数的数量public class demo1 &#123;    //定义一个使用筛法的计算小于n的质数数量的函数    public static int countPrimes(int n) &#123;        //初始化计数器为0        int count = 0;        //创建一个布尔数组，用于标记是否为质数        boolean[] prime = new boolean[n];        //将数组中所有元素设为true        for (int i = 2; i &lt; n; i++) &#123;            prime[i] = true;        &#125;        //遍历从2到n-1的所有整数，如果是质数，就将其倍数设为false        for (int i = 2; i &lt; n; i++) &#123;            if (prime[i]) &#123;                for (int j = i + i; j &lt; n; j += i) &#123;                    prime[j] = false;                &#125;            &#125;        &#125;        //遍历数组，统计true的个数，即质数的个数        for (int i = 0; i &lt; n; i++) &#123;            if (prime[i]) &#123;                count++;            &#125;        &#125;        //返回计数器的值        return count;    &#125;&#125;\n有序列表 数字+句点然后空格，可缩进\n\n123\n123\n123\n123\n123\n123\n\n\n\n\n\n\n\n无序列表，输入-，然后空格\n\n123\n123\n123\n\n\n\n\n\n加粗，倾斜加粗  使用两个前后括住倾斜       一个加粗倾斜  三个前后括住\n\n\ntitle:  217.”存在重复元素”（”Contains Duplicate”）问题题目：给你一个整数数组 nums 。如果任一值在数组中出现 至少两次 ，返回 true ；如果数组中每个元素互不相同，返回 false 。\n输入：nums = [1,2,3,1]  输出： true\n\n分析：题目要求判断一个整数数组中是否存在至少两个重复元素使用HashSet(HashSet内容详见另一篇笔记)来判断数组中是否存在重复的元素使用增强for循环（iter）对数组进行遍历，将数组中的每个元素假如HashSet中由于HashSet不允许包含重复的元素，使用if判断contains，如果元素已经存在HashSet中，则元素重复，返回true，否则返回false\n代码实现： \nimport java.util.HashSet;public class demo2 &#123;        public boolean containsDuplicate(int[] nums) &#123;            HashSet&lt;Integer&gt; numSet = new HashSet&lt;Integer&gt;();            for(int num : nums)&#123;                if(numSet.contains(num))&#123;                    return true;                &#125;                numSet.add(num);            &#125;            return false;        &#125;&#125;\n时间复杂度：O（n）空间复杂度：O（n）\n 比较简单的一道题目，纯粹当做复习java基础\n"}]